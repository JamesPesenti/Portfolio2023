{"ast":null,"code":"\"use strict\";\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildAsyncRequire = void 0;\nvar loadBundle_1 = require(\"./loadBundle\");\nfunction buildAsyncRequire() {\n  var cache = new Map();\n  return function () {\n    var _universal_loadBundleAsync = _asyncToGenerator(function* (path) {\n      if (cache.has(path)) {\n        return cache.get(path);\n      }\n      var promise = (0, loadBundle_1.loadBundleAsync)(path).catch(function (error) {\n        cache.delete(path);\n        throw error;\n      });\n      cache.set(path, promise);\n      return promise;\n    });\n    function universal_loadBundleAsync(_x) {\n      return _universal_loadBundleAsync.apply(this, arguments);\n    }\n    return universal_loadBundleAsync;\n  }();\n}\nexports.buildAsyncRequire = buildAsyncRequire;","map":{"version":3,"mappings":";;;;;;AAOA;AASA,SAAgBA,iBAAiB;EAC/B,IAAMC,KAAK,GAAG,IAAIC,GAAG,EAAyB;EAE9C;IAAA,mDAAO,WAAyCC,IAAY;MAC1D,IAAIF,KAAK,CAACG,GAAG,CAACD,IAAI,CAAC,EAAE;QACnB,OAAOF,KAAK,CAACI,GAAG,CAACF,IAAI,CAAE;;MAGzB,IAAMG,OAAO,GAAG,gCAAe,EAACH,IAAI,CAAC,CAACI,KAAK,CAAC,UAACC,KAAK,EAAI;QACpDP,KAAK,CAACQ,MAAM,CAACN,IAAI,CAAC;QAClB,MAAMK,KAAK;MACb,CAAC,CAAC;MAEFP,KAAK,CAACS,GAAG,CAACP,IAAI,EAAEG,OAAO,CAAC;MAExB,OAAOA,OAAO;IAChB,CAAC;IAAA,SAbqBK,yBAAyB;MAAA;IAAA;IAAA,OAAzBA,yBAAyB;EAAA;AAcjD;AAjBAC","names":["buildAsyncRequire","cache","Map","path","has","get","promise","catch","error","delete","set","universal_loadBundleAsync","exports"],"sources":["C:\\Users\\jimpe\\Desktop\\react_native_apps\\Portfolio2023\\node_modules\\@expo\\metro-runtime\\src\\async-require\\buildAsyncRequire.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadBundleAsync } from \"./loadBundle\";\n\n/**\n * Must satisfy the requirements of the Metro bundler.\n * https://github.com/react-native-community/discussions-and-proposals/blob/main/proposals/0605-lazy-bundling.md#__loadbundleasync-in-metro\n */\ntype AsyncRequire = (path: string) => Promise<void>;\n\n/** Create an `loadBundleAsync` function in the expected shape for Metro bundler. */\nexport function buildAsyncRequire(): AsyncRequire {\n  const cache = new Map<string, Promise<void>>();\n\n  return async function universal_loadBundleAsync(path: string): Promise<void> {\n    if (cache.has(path)) {\n      return cache.get(path)!;\n    }\n\n    const promise = loadBundleAsync(path).catch((error) => {\n      cache.delete(path);\n      throw error;\n    });\n\n    cache.set(path, promise);\n\n    return promise;\n  };\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}